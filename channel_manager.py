import logging
from telegram import Bot, ChatMember
from telegram.error import TelegramError
from config import BOT_TOKEN, PRIVATE_CHANNEL_ID
from database import Database

logger = logging.getLogger(__name__)

class ChannelManager:
    def __init__(self):
        self.bot = Bot(token=BOT_TOKEN)
        self.db = Database()
    
    async def check_bot_permissions(self) -> dict:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ —á–∞—Ç–∞—Ö"""
        permissions = {
            'channel': {'is_admin': False, 'can_invite': False, 'error': None},
            'chat': {'is_admin': False, 'can_invite': False, 'error': None}
        }
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if not self.bot._initialized:
            await self.bot.initialize()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –≤ –∫–∞–Ω–∞–ª–µ
        if PRIVATE_CHANNEL_ID:
            try:
                bot_member = await self.bot.get_chat_member(chat_id=PRIVATE_CHANNEL_ID, user_id=self.bot.id)
                permissions['channel']['is_admin'] = bot_member.status in ['administrator', 'creator']
                
                if permissions['channel']['is_admin']:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                    try:
                        await self.bot.create_chat_invite_link(chat_id=PRIVATE_CHANNEL_ID, member_limit=1)
                        permissions['channel']['can_invite'] = True
                    except TelegramError as e:
                        permissions['channel']['error'] = str(e)
            except TelegramError as e:
                permissions['channel']['error'] = str(e)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –≤ —á–∞—Ç–µ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
        try:
            from config import PRIVATE_CHAT_ID
            if PRIVATE_CHAT_ID:
                try:
                    bot_member = await self.bot.get_chat_member(chat_id=PRIVATE_CHAT_ID, user_id=self.bot.id)
                    permissions['chat']['is_admin'] = bot_member.status in ['administrator', 'creator']
                    
                    if permissions['chat']['is_admin']:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                        try:
                            await self.bot.create_chat_invite_link(chat_id=PRIVATE_CHAT_ID, member_limit=1)
                            permissions['chat']['can_invite'] = True
                        except TelegramError as e:
                            permissions['chat']['error'] = str(e)
                except TelegramError as e:
                    permissions['chat']['error'] = str(e)
        except ImportError:
            # PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
            permissions['chat']['error'] = 'PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
        
        return permissions
    
    async def add_user_to_channel(self, user_id: int) -> bool:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª"""
        if not PRIVATE_CHANNEL_ID:
            logger.warning("PRIVATE_CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not self.bot._initialized:
                await self.bot.initialize()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
            bot_member = await self.bot.get_chat_member(chat_id=PRIVATE_CHANNEL_ID, user_id=self.bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                logger.error(f"–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ {PRIVATE_CHANNEL_ID}")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            chat = await self.bot.get_chat(chat_id=PRIVATE_CHANNEL_ID)
            if not chat.invite_link:
                logger.warning("–£ –∫–∞–Ω–∞–ª–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            invite_link = await self.bot.create_chat_invite_link(
                chat_id=PRIVATE_CHANNEL_ID,
                member_limit=1,
                expire_date=None  # –°—Å—ã–ª–∫–∞ –Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await self.bot.send_message(
                chat_id=user_id,
                text=f"üì∫ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –ê—Å–∫–µ–∑—ã!\n\n{invite_link.invite_link}"
            )
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
            return True
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ –∫–∞–Ω–∞–ª: {e}")
            if "Not enough rights" in str(e) or "CHAT_ADMIN_REQUIRED" in str(e):
                logger.error("–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª")
            return False
    
    async def add_user_to_chat(self, user_id: int) -> bool:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç"""
        try:
            from config import PRIVATE_CHAT_ID
            if not PRIVATE_CHAT_ID:
                logger.warning("PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return False
        except ImportError:
            logger.warning("PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not self.bot._initialized:
                await self.bot.initialize()
            
            # –ü–æ–ª—É—á–∞–µ–º PRIVATE_CHAT_ID
            from config import PRIVATE_CHAT_ID
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞
            bot_member = await self.bot.get_chat_member(chat_id=PRIVATE_CHAT_ID, user_id=self.bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                logger.error(f"–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞ {PRIVATE_CHAT_ID}")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            chat = await self.bot.get_chat(chat_id=PRIVATE_CHAT_ID)
            if not chat.invite_link:
                logger.warning("–£ —á–∞—Ç–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            invite_link = await self.bot.create_chat_invite_link(
                chat_id=PRIVATE_CHAT_ID,
                member_limit=1,
                expire_date=None  # –°—Å—ã–ª–∫–∞ –Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await self.bot.send_message(
                chat_id=user_id,
                text=f"üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç –ê—Å–∫–µ–∑—ã!\n\n{invite_link.invite_link}"
            )
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç")
            return True
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —á–∞—Ç: {e}")
            if "Not enough rights" in str(e) or "CHAT_ADMIN_REQUIRED" in str(e):
                logger.error("–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç")
            return False
    
    async def remove_user_from_channel(self, user_id: int) -> bool:
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
        if not PRIVATE_CHANNEL_ID:
            logger.warning("PRIVATE_CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not self.bot._initialized:
                await self.bot.initialize()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
            bot_member = await self.bot.get_chat_member(PRIVATE_CHANNEL_ID, self.bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                logger.error("–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
                return False
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞
            await self.bot.ban_chat_member(PRIVATE_CHANNEL_ID, user_id)
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞")
            return True
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∏–∑ –∫–∞–Ω–∞–ª–∞: {e}")
            return False
    
    async def remove_user_from_chat(self, user_id: int) -> bool:
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞"""
        try:
            from config import PRIVATE_CHAT_ID
            if not PRIVATE_CHAT_ID:
                logger.warning("PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return False
        except ImportError:
            logger.warning("PRIVATE_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not self.bot._initialized:
                await self.bot.initialize()
            
            # –ü–æ–ª—É—á–∞–µ–º PRIVATE_CHAT_ID
            from config import PRIVATE_CHAT_ID
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞
            bot_member = await self.bot.get_chat_member(PRIVATE_CHAT_ID, self.bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                logger.error("–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞")
                return False
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
            await self.bot.ban_chat_member(PRIVATE_CHAT_ID, user_id)
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª–µ–Ω –∏–∑ —á–∞—Ç–∞")
            return True
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∏–∑ —á–∞—Ç–∞: {e}")
            return False
    
    async def check_user_in_channel(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ"""
        if not PRIVATE_CHANNEL_ID:
            return False
        
        try:
            member = await self.bot.get_chat_member(PRIVATE_CHANNEL_ID, user_id)
            return member.status in ['member', 'administrator', 'creator']
        except TelegramError:
            return False
    
    async def send_channel_invite(self, user_id: int) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        if not PRIVATE_CHANNEL_ID:
            logger.warning("PRIVATE_CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not self.bot._initialized:
                await self.bot.initialize()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
            bot_member = await self.bot.get_chat_member(chat_id=PRIVATE_CHANNEL_ID, user_id=self.bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                logger.error(f"–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ {PRIVATE_CHANNEL_ID}")
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
            chat = await self.bot.get_chat(chat_id=PRIVATE_CHANNEL_ID)
            channel_name = chat.title or "–ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –ê—Å–∫–µ–∑—ã"
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            invite_link = await self.bot.create_chat_invite_link(
                chat_id=PRIVATE_CHANNEL_ID,
                member_limit=1,
                expire_date=None
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            invite_text = f"""
üì∫ {channel_name}

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª:

{invite_link.invite_link}

–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
            """
            
            await self.bot.send_message(
                chat_id=user_id,
                text=invite_text
            )
            
            logger.info(f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            return True
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            return False
    
    async def check_user_in_chat(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–∞—Ç–µ"""
        try:
            from config import PRIVATE_CHAT_ID
            if not PRIVATE_CHAT_ID:
                return False
        except ImportError:
            return False
        
        try:
            member = await self.bot.get_chat_member(PRIVATE_CHAT_ID, user_id)
            return member.status in ['member', 'administrator', 'creator']
        except TelegramError:
            return False
    
    async def grant_access_to_user(self, user_id: int, access_type: str) -> bool:
        """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        success = True
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if not self.db.grant_access(user_id, access_type):
            success = False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –∏ —á–∞—Ç
        if not await self.add_user_to_channel(user_id):
            success = False
        
        if not await self.add_user_to_chat(user_id):
            success = False
        
        return success
    
    async def revoke_access_from_user(self, user_id: int) -> bool:
        """–û—Ç–∑—ã–≤ –¥–æ—Å—Ç—É–ø–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        success = True
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ –∫–∞–Ω–∞–ª–∞ –∏ —á–∞—Ç–∞
        if not await self.remove_user_from_channel(user_id):
            success = False
        
        if not await self.remove_user_from_chat(user_id):
            success = False
        
        return success
