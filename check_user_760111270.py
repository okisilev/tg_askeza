#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 760111270 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
from datetime import datetime

def check_user_in_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 760111270 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('askeza_bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('SELECT * FROM users WHERE user_id = ?', (760111270,))
        user = cursor.fetchone()
        
        if user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
            print(f"   ‚Ä¢ ID: {user[0]}")
            print(f"   ‚Ä¢ Username: {user[1]}")
            print(f"   ‚Ä¢ First name: {user[2]}")
            print(f"   ‚Ä¢ Last name: {user[3]}")
            print(f"   ‚Ä¢ Created: {user[4]}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
        cursor.execute('''
            SELECT yookassa_payment_id, payment_type, amount, status, created_at 
            FROM payments 
            WHERE user_id = ?
            ORDER BY created_at DESC
        ''', (760111270,))
        payments = cursor.fetchall()
        
        if payments:
            print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(payments)} –ø–ª–∞—Ç–µ–∂–µ–π:")
            for payment in payments:
                print(f"   ‚Ä¢ ID: {payment[0]}")
                print(f"     –¢–∏–ø: {payment[1]}")
                print(f"     –°—É–º–º–∞: {payment[2]}‚ÇΩ")
                print(f"     –°—Ç–∞—Ç—É—Å: {payment[3]}")
                print(f"     –î–∞—Ç–∞: {payment[4]}")
                print()
        else:
            print("‚ùå –ü–ª–∞—Ç–µ–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
        successful_payments = [p for p in payments if p[3] == 'succeeded']
        if successful_payments:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π: {len(successful_payments)}")
            for payment in successful_payments:
                print(f"   ‚Ä¢ {payment[0]} - {payment[1]} - {payment[2]}‚ÇΩ - {payment[4]}")
        else:
            print("‚ùå –£—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
        cursor.execute('''
            SELECT access_type, created_at, expires_at, is_active 
            FROM user_access 
            WHERE user_id = ?
            ORDER BY created_at DESC
        ''', (760111270,))
        access_records = cursor.fetchall()
        
        if access_records:
            print(f"\nüîê –ù–∞–π–¥–µ–Ω–æ {len(access_records)} –∑–∞–ø–∏—Å–µ–π –¥–æ—Å—Ç—É–ø–∞:")
            for access in access_records:
                print(f"   ‚Ä¢ –¢–∏–ø: {access[0]}")
                print(f"     –°–æ–∑–¥–∞–Ω: {access[1]}")
                print(f"     –ò—Å—Ç–µ–∫–∞–µ—Ç: {access[2]}")
                print(f"     –ê–∫—Ç–∏–≤–µ–Ω: {access[3]}")
                print()
        else:
            print("‚ùå –ó–∞–ø–∏—Å–µ–π –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def print_troubleshooting():
    """–ü–µ—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫"""
    print("\n" + "=" * 50)
    print("üîß –£–°–¢–†–ê–ù–ï–ù–ò–ï –ù–ï–ü–û–õ–ê–î–û–ö")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:")
    print("   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É /start")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
    
    print("\n2Ô∏è‚É£ –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω:")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –±—ã–ª —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –Ω–µ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –æ–±–Ω–æ–≤–∏–ª—Å—è")
    
    print("\n3Ô∏è‚É£ –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–π")
    
    print("\n4Ô∏è‚É£ –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è:")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 760111270")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_ok = check_user_in_database()
    
    if db_ok:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        print_troubleshooting()
        return
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É /start")
    print("2. –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞")
    print("3. –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
    print("4. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–µ–π")

if __name__ == "__main__":
    main()
