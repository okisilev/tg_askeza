import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BOT_TOKEN = "7843200583:AAF-CcQg5zsSe3jfR5_jbAJ8L8ggtKTzGDw"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üîß **100% —Ä–∞–±–æ—á–∏–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å ID –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞:**\n\n"
        "1. üì¢ –°–æ–∑–¥–∞–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ü–£–ë–õ–ò–ß–ù–´–ô –∫–∞–Ω–∞–ª\n"
        "2. üë• –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –Ω–µ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "3. üîÑ –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ –ø—É–±–ª–∏—á–Ω—ã–π\n"
        "4. üìã –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∂–µ—Ç ID –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞\n\n"
        "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ –Ω–∏–∂–µ ‚¨áÔ∏è"
    )

async def alternative_method(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ API"""
    await update.message.reply_text(
        "üîê **–ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç):**\n\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ https://my.telegram.org/apps\n"
        "2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∏ –ø–æ–ª—É—á–∏—Ç–µ API_ID –∏ API_HASH\n"
        "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID:\n\n"
        "```python\n"
        "from telethon import TelegramClient\n\n"
        "api_id = 'YOUR_API_ID'\n"
        "api_hash = 'YOUR_API_HASH'\n\n"
        "async def main():\n"
        "    async with TelegramClient('session', api_id, api_hash) as client:\n"
        "        dialogs = await client.get_dialogs()\n"
        "        for dialog in dialogs:\n"
        "            if dialog.is_channel:\n"
        "                print(f'Channel: {dialog.name}, ID: {dialog.id}')\n\n"
        "import asyncio\n"
        "asyncio.run(main())\n"
        "```",
        parse_mode='Markdown'
    )

async def create_helper_channel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–∞–Ω–∞–ª–∞-–ø–æ–º–æ—â–Ω–∏–∫–∞"""
    await update.message.reply_text(
        "üìã **–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n\n"
        "1. üì± –í Telegram –Ω–∞–∂–º–∏—Ç–µ ‚Üí –°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª\n"
        "2. üì¢ –ù–∞–∑–≤–∞–Ω–∏–µ: '–í—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è ID'\n"
        "3. üîì –¢–∏–ø: –ü–£–ë–õ–ò–ß–ù–´–ô (–≤–∞–∂–Ω–æ!)\n"
        "4. üåê Username: –ª—é–±–æ–π —Å–≤–æ–±–æ–¥–Ω—ã–π\n"
        "5. üë• –î–æ–±–∞–≤—å—Ç–µ @raw_data_bot –≤ –∫–∞–Ω–∞–ª\n"
        "6. üîÑ –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞\n"
        "7. üìä –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–∫–ª—é—á–∞—è chat_id\n\n"
        "–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è ID –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª",
        parse_mode='Markdown'
    )

async def handle_forwarded_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        if update.message.forward_from_chat:
            chat = update.message.forward_from_chat
            await update.message.reply_text(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!\n"
                f"üÜî ID: `{chat.id}`\n"
                f"üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}\n"
                f"üë§ –¢–∏–ø: {chat.type}",
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text(
                "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–Ω–∞–ª–µ.\n"
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–Ω–∞–ª–∞."
            )
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("api_method", alternative_method))
    application.add_handler(CommandHandler("helper", create_helper_channel))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_forwarded_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()