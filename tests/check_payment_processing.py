#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
"""

import sqlite3
from datetime import datetime, timedelta

def check_pending_payments():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ pending –ø–ª–∞—Ç–µ–∂–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ pending –ø–ª–∞—Ç–µ–∂–µ–π")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('askeza_bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º pending –ø–ª–∞—Ç–µ–∂–∏
        cursor.execute('''
            SELECT user_id, yookassa_payment_id, payment_type, amount, created_at 
            FROM payments 
            WHERE status = 'pending'
            ORDER BY created_at DESC
        ''')
        pending_payments = cursor.fetchall()
        
        if pending_payments:
            print(f"‚è≥ –ù–∞–π–¥–µ–Ω–æ {len(pending_payments)} pending –ø–ª–∞—Ç–µ–∂–µ–π:")
            for payment in pending_payments:
                print(f"   ‚Ä¢ User: {payment[0]}")
                print(f"     Payment ID: {payment[1]}")
                print(f"     Type: {payment[2]}")
                print(f"     Amount: {payment[3]}‚ÇΩ")
                print(f"     Created: {payment[4]}")
                print()
        else:
            print("‚úÖ Pending –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞
        cursor.execute('''
            SELECT p.user_id, p.yookassa_payment_id, p.payment_type, p.amount, p.created_at
            FROM payments p
            LEFT JOIN user_access ua ON p.user_id = ua.user_id AND ua.is_active = 1
            WHERE p.status = 'succeeded' AND ua.user_id IS NULL
            ORDER BY p.created_at DESC
        ''')
        payments_without_access = cursor.fetchall()
        
        if payments_without_access:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(payments_without_access)} —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞:")
            for payment in payments_without_access:
                print(f"   ‚Ä¢ User: {payment[0]}")
                print(f"     Payment ID: {payment[1]}")
                print(f"     Type: {payment[2]}")
                print(f"     Amount: {payment[3]}‚ÇΩ")
                print(f"     Created: {payment[4]}")
                print()
        else:
            print("‚úÖ –í—Å–µ —É—Å–ø–µ—à–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø")
        
        conn.close()
        return len(pending_payments), len(payments_without_access)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 0, 0

def check_automatic_processing():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 50)
    
    print("üìã –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:")
    print("1. ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ")
    print("2. ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞")
    print("3. ‚ùå –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ (–ø—Ä–æ–±–ª–µ–º–∞)")
    print("4. ‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–ø—Ä–æ–±–ª–µ–º–∞)")
    print("5. ‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª (–ø—Ä–æ–±–ª–µ–º–∞)")
    
    print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º:")
    print("1. –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    print("2. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞")
    print("4. –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pending –ø–ª–∞—Ç–µ–∂–∏
    pending_count, without_access_count = check_pending_payments()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    check_automatic_processing()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   ‚Ä¢ Pending –ø–ª–∞—Ç–µ–∂–µ–π: {pending_count}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–µ–∂–µ–π –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞: {without_access_count}")
    
    if pending_count > 0 or without_access_count > 0:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–ª–∞—Ç–µ–∂–µ–π!")
        print("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python run_no_webhook.py")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

if __name__ == "__main__":
    main()
