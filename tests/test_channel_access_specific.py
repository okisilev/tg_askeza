#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–∞–Ω–∞–ª—É
PRIVATE_CHANNEL_ID=-1002806695160
"""

import asyncio
import logging
from database import Database
from channel_manager import ChannelManager
from config import BOT_TOKEN, PRIVATE_CHANNEL_ID, PRIVATE_CHAT_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def test_specific_channel_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–∞–Ω–∞–ª—É"""
    print("üì∫ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É PRIVATE_CHANNEL_ID=-1002806695160")
    print("=" * 50)
    
    try:
        channel_manager = ChannelManager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   ‚Ä¢ BOT_TOKEN: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if BOT_TOKEN else '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   ‚Ä¢ PRIVATE_CHANNEL_ID: {PRIVATE_CHANNEL_ID}")
        print(f"   ‚Ä¢ PRIVATE_CHAT_ID: {PRIVATE_CHAT_ID}")
        
        if not PRIVATE_CHANNEL_ID:
            print("‚ùå PRIVATE_CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
        print(f"\nüîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ {PRIVATE_CHANNEL_ID}...")
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if not channel_manager.bot._initialized:
                await channel_manager.bot.initialize()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
            bot_member = await channel_manager.bot.get_chat_member(
                chat_id=PRIVATE_CHANNEL_ID, 
                user_id=channel_manager.bot.id
            )
            
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ: {bot_member.status}")
            
            if bot_member.status in ['administrator', 'creator']:
                print("‚úÖ –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                try:
                    invite_link = await channel_manager.bot.create_chat_invite_link(
                        chat_id=PRIVATE_CHANNEL_ID,
                        member_limit=1,
                        expire_date=None
                    )
                    print("‚úÖ –ë–æ—Ç –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏")
                    print(f"üîó –ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: {invite_link.invite_link}")
                    
                except Exception as e:
                    print(f"‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏: {e}")
                    
            else:
                print("‚ùå –ë–æ—Ç –ù–ï —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
                print("üîß –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –±–æ—Ç–∞: {e}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        print(f"\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ:")
        try:
            chat = await channel_manager.bot.get_chat(chat_id=PRIVATE_CHANNEL_ID)
            print(f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
            print(f"   ‚Ä¢ –¢–∏–ø: {chat.type}")
            print(f"   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {chat.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}")
            print(f"   ‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: {chat.invite_link or '–ù–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏'}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

async def test_user_access_to_channel(user_id: int):
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–∞–Ω–∞–ª—É"""
    print(f"\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∫ –∫–∞–Ω–∞–ª—É")
    print("=" * 50)
    
    try:
        channel_manager = ChannelManager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ
        in_channel = await channel_manager.check_user_in_channel(user_id)
        print(f"üì∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ: {in_channel}")
        
        if not in_channel:
            print("üîÑ –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª...")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª
            success = await channel_manager.add_user_to_channel(user_id)
            
            if success:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
                in_channel_after = await channel_manager.check_user_in_channel(user_id)
                print(f"üì∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {in_channel_after}")
                
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª")
                return False
        else:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–∞–Ω–∞–ª–µ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False

def test_database_access(user_id: int):
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print(f"\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    print("=" * 50)
    
    try:
        db = Database()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.get_user(user_id)
        if user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user[1]}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
        user_access = db.get_user_access(user_id)
        if user_access:
            print(f"‚úÖ –î–æ—Å—Ç—É–ø –Ω–∞–π–¥–µ–Ω: {user_access[2]} (–∞–∫—Ç–∏–≤–µ–Ω: {user_access[5]})")
        else:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
        with db.get_connection() as conn:
            cursor = conn.cursor()
            cursor.execute('''
                SELECT yookassa_payment_id, status, created_at 
                FROM payments 
                WHERE user_id = ? AND status = 'succeeded'
                ORDER BY created_at DESC
                LIMIT 1
            ''', (user_id,))
            payment = cursor.fetchone()
        
        if payment:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –Ω–∞–π–¥–µ–Ω: {payment[0]} ({payment[2]})")
        else:
            print("‚ùå –£—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def print_setup_instructions():
    """–ü–µ—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print("\n" + "=" * 50)
    print("üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   ‚Ä¢ BOT_TOKEN - —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("   ‚Ä¢ PRIVATE_CHANNEL_ID=-1002806695160")
    print("   ‚Ä¢ PRIVATE_CHAT_ID - ID —á–∞—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)")
    
    print("\n2Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
    print("   ‚Ä¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª")
    print("   ‚Ä¢ –°–¥–µ–ª–∞–π—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    print("   ‚Ä¢ –î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞:")
    print("   ‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    print("   ‚Ä¢ –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")
    print("   ‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞:")
    print("   ‚Ä¢ –ö–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º")
    print("   ‚Ä¢ –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    user_id = 431292182  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ª–æ–≥–æ–≤
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É PRIVATE_CHANNEL_ID=-1002806695160")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞
    channel_ok = await test_specific_channel_access()
    
    if channel_ok:
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—é—Ç")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞–Ω–∞–ª–∞")
        print_setup_instructions()
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_ok = test_database_access(user_id)
    
    if db_ok:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    access_ok = await test_user_access_to_channel(user_id)
    
    if access_ok:
        print("‚úÖ –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª'")

if __name__ == "__main__":
    asyncio.run(main())
