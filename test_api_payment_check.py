#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
"""

import asyncio
import logging
import sqlite3
from datetime import datetime
from yookassa_client import YooKassaClient
from database import Database
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def test_api_payment_check():
    """–¢–µ—Å—Ç API –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        yookassa_client = YooKassaClient()
        db = Database()
        
        print("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ pending –ø–ª–∞—Ç–µ–∂–∏
        print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º pending –ø–ª–∞—Ç–µ–∂–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        with sqlite3.connect(db.db_path) as conn:
            conn.row_factory = sqlite3.Row
            cursor = conn.cursor()
            cursor.execute('''
                SELECT yookassa_payment_id, user_id, payment_type, amount, created_at 
                FROM payments 
                WHERE status = 'pending'
                ORDER BY created_at DESC
            ''')
            pending_payments = cursor.fetchall()
        
        if not pending_payments:
            print("‚úÖ –ù–µ—Ç pending –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
            return True
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(pending_payments)} pending –ø–ª–∞—Ç–µ–∂–µ–π:")
        for payment in pending_payments:
            print(f"   - ID: {payment['yookassa_payment_id']}")
            print(f"     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {payment['user_id']}")
            print(f"     –¢–∏–ø: {payment['payment_type']}")
            print(f"     –°—É–º–º–∞: {payment['amount']}‚ÇΩ")
            print(f"     –î–∞—Ç–∞: {payment['created_at']}")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–µ–π...")
        updated_count = 0
        
        for payment_row in pending_payments:
            payment_id = payment_row['yookassa_payment_id']
            user_id = payment_row['user_id']
            payment_type = payment_row['payment_type']
            
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂ {payment_id}...")
            
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ API
                status_result = yookassa_client.get_payment_status(payment_id)
                
                if status_result["success"]:
                    status = status_result["status"]
                    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {status}")
                    
                    if status == "succeeded":
                        print(f"   üéâ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!")
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
                        if db.update_payment_status(payment_id, "succeeded"):
                            print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î")
                            updated_count += 1
                        else:
                            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ë–î")
                    
                    elif status in ["canceled", "failed"]:
                        print(f"   ‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –∏–ª–∏ –Ω–µ—É—Å–ø–µ—à–µ–Ω: {status}")
                        db.update_payment_status(payment_id, status)
                    
                    else:
                        print(f"   ‚è≥ –ü–ª–∞—Ç–µ–∂ –≤—Å–µ –µ—â–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ: {status}")
                
                else:
                    error = status_result.get('error', 'Unknown error')
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {error}")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–ª–∞—Ç–µ–∂–µ–π")
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_yookassa_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa API"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa API")
    print("=" * 50)
    
    try:
        from config import YOOKASSA_SHOP_ID, YOOKASSA_SECRET_KEY
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa...")
        print(f"   Shop ID: {YOOKASSA_SHOP_ID}")
        print(f"   Secret Key: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if YOOKASSA_SECRET_KEY else '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        
        if not YOOKASSA_SHOP_ID or not YOOKASSA_SECRET_KEY:
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa –Ω–µ–ø–æ–ª–Ω—ã–µ")
            return False
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        yookassa_client = YooKassaClient()
        print("‚úÖ YooKassa –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        from yookassa import Configuration
        if Configuration.account_id and Configuration.secret_key:
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ÆKassa —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
            # –ü—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π API –∑–∞–ø—Ä–æ—Å
            print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å...")
            try:
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ (—Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID)
                test_result = yookassa_client.get_payment_status("test_payment_id")
                if test_result["success"]:
                    print("‚úÖ API –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                else:
                    print(f"‚ö†Ô∏è API –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ —Å –æ—à–∏–±–∫–æ–π: {test_result.get('error', 'Unknown error')}")
                return True
            except Exception as api_error:
                print(f"‚ö†Ô∏è API –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è: {api_error}")
                print("   (–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞)")
                return True
        else:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ÆKassa –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa: {e}")
        return False

def print_api_check_info():
    """–ü–µ—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ API –ø—Ä–æ–≤–µ—Ä–∫–µ"""
    print("\n" + "=" * 50)
    print("üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û API –ü–†–û–í–ï–†–ö–ï –ü–õ–ê–¢–ï–ñ–ï–ô")
    print("=" * 50)
    
    print("\nüîÑ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç API –ø—Ä–æ–≤–µ—Ä–∫–∞:")
    print("1. –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç pending –ø–ª–∞—Ç–µ–∂–∏")
    print("2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –ÆKassa API")
    print("3. –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 'succeeded' - –ø–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
    print("4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞")
    print("5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–∞–Ω–∞–ª—ã")
    
    print("\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: 5 –º–∏–Ω—É—Ç")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ pending –ø–ª–∞—Ç–µ–∂–∏")
    print("‚Ä¢ Webhook –æ—Ç–∫–ª—é—á–µ–Ω")
    print("‚Ä¢ –¢–æ–ª—å–∫–æ API –ø—Ä–æ–≤–µ—Ä–∫–∞")
    
    print("\nüìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:")
    print("‚Ä¢ –õ–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π")
    print("‚Ä¢ –û—à–∏–±–∫–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ –°—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç–µ–∂–µ–π")

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    try:
        from config import YOOKASSA_SHOP_ID, YOOKASSA_SECRET_KEY, BOT_TOKEN, PRIVATE_CHANNEL_ID
        
        print(f"YOOKASSA_SHOP_ID: {YOOKASSA_SHOP_ID}")
        print(f"YOOKASSA_SECRET_KEY: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if YOOKASSA_SECRET_KEY else '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"BOT_TOKEN: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if BOT_TOKEN else '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"PRIVATE_CHANNEL_ID: {PRIVATE_CHANNEL_ID}")
        
        if not all([YOOKASSA_SHOP_ID, YOOKASSA_SECRET_KEY, BOT_TOKEN]):
            print("\n‚ùå –ù–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
            return False
        
        print("\n‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_ok = check_config()
    if not config_ok:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ÆKassa
    connection_ok = test_yookassa_connection()
    
    if connection_ok:
        print("\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ÆKassa —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ÆKassa")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–µ–π
    api_check_ok = test_api_payment_check()
    
    if api_check_ok:
        print("\n‚úÖ API –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å API –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–ª–∞—Ç–µ–∂–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print_api_check_info()
    
    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –ë–ï–ó webhook –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python run_no_webhook.py")
    print("   –∏–ª–∏")
    print("   python main_no_webhook.py")

if __name__ == "__main__":
    main()
