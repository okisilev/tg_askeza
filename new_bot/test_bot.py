#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –±–æ—Ç–∞ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
"""

import asyncio
import logging
from datetime import datetime, timedelta
from telegram import Bot
from config import config
from database import Database

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def test_bot_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É"""
    print("ü§ñ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É")
    print("=" * 50)
    
    try:
        bot = Bot(token=config.BOT_TOKEN)
        await bot.initialize()
        
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username}")
        print(f"   ‚Ä¢ ID: {bot_info.id}")
        print(f"   ‚Ä¢ –ò–º—è: {bot_info.first_name}")
        print(f"   ‚Ä¢ Username: @{bot_info.username}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {e}")
        return False

def test_database():
    """–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    try:
        db = Database()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 123456789
        db.add_user(
            user_id=test_user_id,
            username="test_user",
            first_name="Test",
            last_name="User"
        )
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        db.create_subscription(
            user_id=test_user_id,
            payment_id="test_payment_123",
            amount=config.SUBSCRIPTION_PRICE
        )
        print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –ë–î")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        is_active = db.is_subscription_active(test_user_id)
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞: {is_active}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        subscription = db.get_user_subscription(test_user_id)
        if subscription:
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {subscription['payment_id']}")
            print(f"   ‚Ä¢ –ò—Å—Ç–µ–∫–∞–µ—Ç: {subscription['expires_at']}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∞: {subscription['is_active']}")
        else:
            print("‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = db.get_user_stats()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    try:
        print(f"‚úÖ BOT_TOKEN: {config.BOT_TOKEN[:10]}...")
        print(f"‚úÖ YOOKASSA_SHOP_ID: {config.YOOKASSA_SHOP_ID}")
        print(f"‚úÖ YOOKASSA_SECRET_KEY: {config.YOOKASSA_SECRET_KEY[:10]}...")
        print(f"‚úÖ PRIVATE_CHANNEL_ID: {config.PRIVATE_CHANNEL_ID}")
        print(f"‚úÖ SUBSCRIPTION_PRICE: {config.SUBSCRIPTION_PRICE}")
        print(f"‚úÖ SUBSCRIPTION_DAYS: {config.SUBSCRIPTION_DAYS}")
        print(f"‚úÖ WARNING_DAYS: {config.WARNING_DAYS}")
        print(f"‚úÖ NOTIFICATION_HOUR: {config.NOTIFICATION_HOUR}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_subscription_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("\nüìÖ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫")
    print("=" * 50)
    
    try:
        db = Database()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
        test_user_id = 999999999
        db.add_user(test_user_id, "test_sub", "Test", "Subscription")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        db.create_subscription(
            user_id=test_user_id,
            payment_id="test_subscription_123",
            amount=config.SUBSCRIPTION_PRICE
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        is_active = db.is_subscription_active(test_user_id)
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞: {is_active}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        subscription = db.get_user_subscription(test_user_id)
        if subscription:
            expires_at = datetime.fromisoformat(subscription['expires_at'])
            days_left = (expires_at - datetime.now()).days
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç: {expires_at}")
            print(f"‚úÖ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é
        db.deactivate_subscription(test_user_id)
        is_active_after = db.is_subscription_active(test_user_id)
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: {not is_active_after}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")
        return False

def print_workflow():
    """–ü–µ—á–∞—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    print("\n" + "=" * 50)
    print("üîÑ –†–ê–ë–û–ß–ò–ô –ü–†–û–¶–ï–°–° –ë–û–¢–ê –° –ü–û–î–ü–ò–°–ö–ê–ú–ò")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç /start")
    print("   ‚Ä¢ –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏")
    print("   ‚Ä¢ –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É")
    print("   ‚Ä¢ –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç - –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è")
    
    print("\n2Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa")
    print("   ‚Ä¢ –ü–ª–∞—Ç–µ–∂ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î")
    print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É")
    
    print("\n3Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç")
    print("   ‚Ä¢ –ÆKassa –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–ª–∞—Ç–µ–∂")
    print("   ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'succeeded'")
    
    print("\n4Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É'")
    print("   ‚Ä¢ –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤ –ÆKassa")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
    print("   ‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É")
    
    print("\n5Ô∏è‚É£ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("   ‚Ä¢ –ó–∞ 3 –¥–Ω—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    print("   ‚Ä¢ –ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏")
    print("   ‚Ä¢ –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")
    
    print("\n6Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø")
    print("   ‚Ä¢ –ú–æ–∂–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")
    print("   ‚Ä¢ –ü–æ–ª—É—á–∞–µ—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
    print("   ‚Ä¢ –£—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–∫—Ä—ã—Ç—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç –±–æ—Ç–∞ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    config_ok = test_config()
    bot_ok = await test_bot_connection()
    db_ok = test_database()
    subscription_ok = test_subscription_logic()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {'‚úÖ' if config_ok else '‚ùå'}")
    print(f"   ‚Ä¢ –ë–æ—Ç: {'‚úÖ' if bot_ok else '‚ùå'}")
    print(f"   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if db_ok else '‚ùå'}")
    print(f"   ‚Ä¢ –õ–æ–≥–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫: {'‚úÖ' if subscription_ok else '‚ùå'}")
    
    if all([config_ok, bot_ok, db_ok, subscription_ok]):
        print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print("–ë–æ—Ç —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        print_workflow()
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ª–æ–≥–∏")

if __name__ == "__main__":
    asyncio.run(main())
