#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API
"""

import logging
import asyncio
import uuid
import os
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, Bot
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.error import TelegramError
from yookassa import Configuration, Payment
from yookassa.domain.request import PaymentRequest
from yookassa.domain.response import PaymentResponse
from config import config
from database import Database

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ÆKassa
Configuration.account_id = config.YOOKASSA_SHOP_ID
Configuration.secret_key = config.YOOKASSA_SECRET_KEY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = Database()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    user_id = user.id
    
    print(f"üîç [START] –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[START] –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try:
        db.add_user(
            user_id=user_id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name
        )
        db.update_user_activity(user_id)
        print(f"‚úÖ [START] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        logger.info(f"[START] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        print(f"‚ùå [START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        logger.error(f"[START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
    try:
        print(f"üé• [START] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[START] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤–∏–¥–µ–æ
        video_path = os.path.join(SCRIPT_DIR, "start.mp4")
        print(f"üìÅ [START] –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ: {video_path}")
        
        with open(video_path, "rb") as video_file:
            await context.bot.send_video(
                chat_id=user_id,
                video=video_file,
                caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üå∏"
            )
        
        print(f"‚úÖ [START] –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[START] –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except FileNotFoundError:
        print(f"‚ùå [START] –§–∞–π–ª start.mp4 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        logger.error(f"[START] –§–∞–π–ª start.mp4 –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå [START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        logger.error(f"[START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        welcome_text = f"""–ú–µ–Ω—è –∑–æ–≤—É—Ç, –û–ª—å–≥–∞üå∏ –ò —è –ª—é–±–∏—Ç–µ–ª—å –∞—Å–∫–µ–∑, –¥–∞–Ω–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É —è –∏—Å–ø–æ–ª—å–∑—É—é —É–∂–µ —Ü–µ–ª—ã—Ö 4 –≥–æ–¥–∞üòç –¥–∞–∂–µ –ø—Ä–æ—à–ª–∞ –ø–æ –Ω–µ–π –æ–±—É—á–µ–Ω–∏–µ, —á—Ç–æ–± –∑–Ω–∞—Ç—å –≤—Å–µ –Ω—é–∞–Ω—Å—ã! –ò–∑ –≤—Å–µ—Ö —Å–æ—Ç–Ω–∏ –ø—Ä–∞–∫—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ —è –∫–æ–≥–¥–∞ –ª–∏–±–æ –ø—Ä–æ–±–æ–≤–∞–ª–∞, –∞—Å–∫–µ–∑–∞ –º–æ—è —Å–∞–º–∞—è –ª—é–±–∏–º–∞—è!üíï

–í–æ-–ø–µ—Ä–≤—ã—Ö, —Ç—ã –ø–æ–ø—Ä–æ–±—É–µ—à—å, –∞ –∫–∞–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É?!‚òÄÔ∏è
–í–æ-–≤—Ç–æ—Ä—ã—Ö, —Ç—ã –Ω–∞—á–Ω–µ—à—å –≤–µ—Ä–∏—Ç—å –≤ —á—É–¥–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∂–µ–ª–∞–Ω–∏—è –º–æ–≥—É—Ç –∏—Å–ø–æ–ª–Ω—è—Ç—å—Å—è —Å–∞–º—ã–º –≤–æ–ª—à–µ–±–Ω—ã–º –æ–±—Ä–∞–∑–æ–ºüí´
–í —Ç—Ä–µ—Ç—å–∏—Ö, —Ç–≤–æ—è –∂–∏–∑–Ω—å –Ω–µ —Å—Ç–∞–Ω–µ—Ç –ø—Ä–µ–∂–Ω–µ–π!‚≠êÔ∏è

–Ø –∂–¥—É —Ç–µ–±—è, {user.first_name}!ü´Ç"""
        
        print(f"üí¨ [START] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[START] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
        await context.bot.send_message(
            chat_id=user_id,
            text=welcome_text
        )
        
        print(f"‚úÖ [START] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[START] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except Exception as e:
        print(f"‚ùå [START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        logger.error(f"[START] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –º–µ–Ω—é
    is_subscribed = db.is_subscription_active(user_id)
    
    if is_subscribed:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        subscription = db.get_user_subscription(user_id)
        expires_at = datetime.fromisoformat(subscription['expires_at'])
        days_left = (expires_at - datetime.now()).days
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É
        try:
            print(f"üîó [START] –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            logger.info(f"[START] –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            invite_link = await context.bot.create_chat_invite_link(
                chat_id=int(config.PRIVATE_CHANNEL_ID),
                member_limit=1,
                expire_date=None
            )
            
            print(f"‚úÖ [START] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            logger.info(f"[START] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            keyboard = [
                [InlineKeyboardButton("üì∫ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=invite_link.invite_link)],
                [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
                [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            status_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!

–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ {expires_at.strftime('%d.%m.%Y')}
–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª.
            """
            
            await context.bot.send_message(
                chat_id=user_id,
                text=status_text,
                reply_markup=reply_markup
            )
            
        except Exception as e:
            print(f"‚ùå [START] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            logger.error(f"[START] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            
            # Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
            keyboard = [
                [InlineKeyboardButton("üì∫ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=f"https://t.me/c/{config.PRIVATE_CHANNEL_ID[1:]}")],
                [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
                [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            status_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!

–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ {expires_at.strftime('%d.%m.%Y')}
–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª.
            """
            
            await context.bot.send_message(
                chat_id=user_id,
                text=status_text,
                reply_markup=reply_markup
            )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        keyboard = [
            [InlineKeyboardButton("üíé –¢–∞—Ä–∏—Ñ—ã", callback_data="tariffs")],
            [InlineKeyboardButton("üìñ –û–± –ê—Å–∫–µ–∑–µ", callback_data="about_askeza")],
            [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
            [InlineKeyboardButton("‚ÑπÔ∏è –û –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="about_subscription")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        menu_text = """
üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê—Å–∫–µ–∑—É!

–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –∑–∞–∫—Ä—ã—Ç—ã–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è–º.

–ù–∞–∂–º–∏—Ç–µ "üíé –¢–∞—Ä–∏—Ñ—ã" —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏.
        """
        
        await context.bot.send_message(
            chat_id=user_id,
            text=menu_text,
            reply_markup=reply_markup
        )
    
    print(f"‚úÖ [START] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    logger.info(f"[START] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

async def handle_subscribe_askeza_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ê—Å–∫–µ–∑–∞"""
    await create_payment(update, context, "askeza", config.ASKEZA_PRICE, config.ASKEZA_DESCRIPTION)

async def handle_subscribe_draft_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫"""
    await create_payment(update, context, "draft", config.ASKEZA_DRAFT_PRICE, config.ASKEZA_DRAFT_DESCRIPTION)

async def handle_subscribe_numerology_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è"""
    await create_payment(update, context, "numerology", config.ASKEZA_NUMEROLOGY_PRICE, config.ASKEZA_NUMEROLOGY_DESCRIPTION)

async def create_payment(update: Update, context: ContextTypes.DEFAULT_TYPE, subscription_type: str, price: float, description: str):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [SUBSCRIBE] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É {subscription_type} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[SUBSCRIBE] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É {subscription_type} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa (–±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ ID)
        print(f"üîç [SUBSCRIBE] –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        logger.info(f"[SUBSCRIBE] –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ÆKassa –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        payment = Payment.create({
            "amount": {
                "value": f"{price:.2f}",
                "currency": "RUB"
            },
            "payment_method_data": {
                "type": "bank_card"
            },
            "confirmation": {
                "type": "redirect",
                "return_url": f"https://t.me/{context.bot.username}"
            },
            "description": description,
            "capture": True  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
        })
        
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç –ÆKassa
        payment_id = payment.id
        print(f"‚úÖ [SUBSCRIBE] –°–æ–∑–¥–∞–Ω payment_id: {payment_id}")
        logger.info(f"[SUBSCRIBE] –°–æ–∑–¥–∞–Ω payment_id: {payment_id}")
        
        print(f"‚úÖ [SUBSCRIBE] –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –≤ –ÆKassa: {payment.id}")
        logger.info(f"[SUBSCRIBE] –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –≤ –ÆKassa: {payment.id}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            db.add_payment(
                user_id=user_id,
                payment_id=payment_id,
                amount=price
            )
            print(f"‚úÖ [SUBSCRIBE] –ü–ª–∞—Ç–µ–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            logger.info(f"[SUBSCRIBE] –ü–ª–∞—Ç–µ–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        except Exception as e:
            print(f"‚ùå [SUBSCRIBE] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –≤ –ë–î: {e}")
            logger.error(f"[SUBSCRIBE] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –≤ –ë–î: {e}")
        
        # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã
        confirmation_url = payment.confirmation.confirmation_url
        print(f"‚úÖ [SUBSCRIBE] URL –¥–ª—è –æ–ø–ª–∞—Ç—ã: {confirmation_url}")
        logger.info(f"[SUBSCRIBE] URL –¥–ª—è –æ–ø–ª–∞—Ç—ã: {confirmation_url}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = [
            [InlineKeyboardButton("üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=confirmation_url)],
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="check_payment")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        payment_text = f"""
üí≥ –°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É {price} —Ä—É–±–ª–µ–π

{description}

–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–ª–∞—Ç—ë–∂–Ω—É—é —Ñ–æ—Ä–º—É –ÆKassa.

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.
        """
        
        await query.edit_message_text(
            payment_text,
            reply_markup=reply_markup
        )
        
        print(f"‚úÖ [SUBSCRIBE] –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–∞—Ç–µ–∂–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[SUBSCRIBE] –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–∞—Ç–µ–∂–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except Exception as e:
        print(f"‚ùå [SUBSCRIBE] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        logger.error(f"[SUBSCRIBE] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        await query.edit_message_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def handle_check_payment_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [CHECK] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[CHECK] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        payment_info = db.get_user_payment(user_id)
        
        if not payment_info:
            print(f"‚ö†Ô∏è [CHECK] –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            logger.warning(f"[CHECK] –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            await query.edit_message_text("‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
            return
        
        payment_id = payment_info['payment_id']
        print(f"üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id}")
        logger.info(f"[CHECK] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤ –ÆKassa
        payment: PaymentResponse = Payment.find_one(payment_id)
        
        print(f"‚úÖ [CHECK] –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {payment.status}")
        logger.info(f"[CHECK] –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {payment.status}")
        
        if payment.status == "succeeded":
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            db.update_payment_status(payment_id, "succeeded")
            print(f"‚úÖ [CHECK] –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ succeeded")
            logger.info(f"[CHECK] –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ succeeded")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ —Å—É–º–º–µ
            amount = payment_info['amount']
            if amount == config.ASKEZA_PRICE:
                subscription_type = "askeza"
                subscription_name = "–ê—Å–∫–µ–∑–∞"
            elif amount == config.ASKEZA_NUMEROLOGY_PRICE:
                subscription_type = "numerology"
                subscription_name = "–ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è"
            else:
                subscription_type = "askeza"
                subscription_name = "–ê—Å–∫–µ–∑–∞"
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
            try:
                db.create_subscription(user_id, payment_id, amount, subscription_type)
                print(f"‚úÖ [CHECK] –ü–æ–¥–ø–∏—Å–∫–∞ {subscription_name} —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                logger.info(f"[CHECK] –ü–æ–¥–ø–∏—Å–∫–∞ {subscription_name} —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
                try:
                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    user_notification = f"""
üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!

üí∞ –°—É–º–º–∞: {amount} —Ä—É–±–ª–µ–π
üì¶ –ü–æ–¥–ø–∏—Å–∫–∞: {subscription_name}
üìÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {config.SUBSCRIPTION_DAYS} –¥–Ω–µ–π
‚è∞ –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: {(datetime.now() + timedelta(days=config.SUBSCRIPTION_DAYS)).strftime('%d.%m.%Y %H:%M')}

‚úÖ –í–∞—à –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!
                    """
                    
                    await context.bot.send_message(
                        chat_id=user_id,
                        text=user_notification
                    )
                    
                    print(f"‚úÖ [CHECK] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                    logger.info(f"[CHECK] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                    
                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
                    admin_notification = f"""
üîî –ù–æ–≤–∞—è —É—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞!

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {query.from_user.first_name} {query.from_user.last_name or ''}
üÜî ID: {user_id}
üì± Username: @{query.from_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üí∞ –°—É–º–º–∞: {amount} —Ä—É–±–ª–µ–π
üì¶ –ü–æ–¥–ø–∏—Å–∫–∞: {subscription_name}
üìÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {config.SUBSCRIPTION_DAYS} –¥–Ω–µ–π
üÜî Payment ID: {payment_id}
‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}
                    """
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
                    await context.bot.send_message(
                        chat_id=config.ADMIN_ID,
                        text=admin_notification
                    )
                    
                    print(f"‚úÖ [CHECK] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                    logger.info(f"[CHECK] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                    
                except TelegramError as e:
                    print(f"‚ùå [CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
                    logger.error(f"[CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
                invite_link = await context.bot.create_chat_invite_link(
                    chat_id=int(config.PRIVATE_CHANNEL_ID),
                    member_limit=1,
                    expire_date=None
                )
                
                print(f"‚úÖ [CHECK] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                logger.info(f"[CHECK] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await context.bot.send_message(
                    chat_id=user_id,
                    text=f"üì∫ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª!\n\n{invite_link.invite_link}"
                )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                keyboard = [
                    [InlineKeyboardButton("üì∫ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=invite_link.invite_link)],
                    [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
                    [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)
                
                success_text = f"""
üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!

–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç {config.SUBSCRIPTION_DAYS} –¥–Ω–µ–π.
–í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ –∑–∞–∫—Ä—ã—Ç—ã–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º.

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª.
                """
                
                await query.edit_message_text(
                    success_text,
                    reply_markup=reply_markup
                )
                
                print(f"‚úÖ [CHECK] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –ø–æ–¥–ø–∏—Å–∫—É")
                logger.info(f"[CHECK] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –ø–æ–¥–ø–∏—Å–∫—É")
                
            except TelegramError as e:
                print(f"‚ùå [CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                logger.error(f"[CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                await query.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                
        elif payment.status == "canceled":
            db.update_payment_status(payment_id, "canceled")
            print(f"‚úÖ [CHECK] –ü–ª–∞—Ç–µ–∂ {payment_id} –æ—Ç–º–µ–Ω–µ–Ω")
            logger.info(f"[CHECK] –ü–ª–∞—Ç–µ–∂ {payment_id} –æ—Ç–º–µ–Ω–µ–Ω")
            await query.edit_message_text(
                "‚ùå –ü–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂."
            )
            
        else:
            print(f"‚è≥ [CHECK] –ü–ª–∞—Ç–µ–∂ {payment_id} –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω, —Å—Ç–∞—Ç—É—Å: {payment.status}")
            logger.info(f"[CHECK] –ü–ª–∞—Ç–µ–∂ {payment_id} –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω, —Å—Ç–∞—Ç—É—Å: {payment.status}")
            await query.edit_message_text(
                "‚è≥ –û–ø–ª–∞—Ç–∞ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            
    except Exception as e:
        print(f"‚ùå [CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        logger.error(f"[CHECK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def handle_my_status_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [STATUS] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç–∞—Ç—É—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[STATUS] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç–∞—Ç—É—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    subscription = db.get_user_subscription(user_id)
    
    if subscription:
        expires_at = datetime.fromisoformat(subscription['expires_at'])
        days_left = (expires_at - datetime.now()).days
        
        if days_left > 0:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            try:
                print(f"üîó [STATUS] –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                logger.info(f"[STATUS] –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                invite_link = await context.bot.create_chat_invite_link(
                    chat_id=int(config.PRIVATE_CHANNEL_ID),
                    member_limit=1,
                    expire_date=None
                )
                
                print(f"‚úÖ [STATUS] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                logger.info(f"[STATUS] –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                status_text = f"""
üìä –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:

‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
üìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {expires_at.strftime('%d.%m.%Y')}
‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
                """
                
                keyboard = [
                    [InlineKeyboardButton("üì∫ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=invite_link.invite_link)],
                    [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")],
                    [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ]
                
            except Exception as e:
                print(f"‚ùå [STATUS] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                logger.error(f"[STATUS] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                
                status_text = f"""
üìä –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:

‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
üìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {expires_at.strftime('%d.%m.%Y')}
‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
                """
                
                keyboard = [
                    [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")],
                    [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ]
        else:
            status_text = f"""
üìä –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:

‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
üìÖ –ò—Å—Ç–µ–∫–ª–∞: {expires_at.strftime('%d.%m.%Y')}

–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.
            """
            
            keyboard = [
                [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")],
                [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ]
    else:
        status_text = """
üìä –í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:

‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.
        """
        
        keyboard = [
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        status_text,
        reply_markup=reply_markup
    )
    
    print(f"‚úÖ [STATUS] –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    logger.info(f"[STATUS] –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

async def handle_renew_subscription_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [RENEW] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[RENEW] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø–ª–∞—Ç—ã
    keyboard = [
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±.", callback_data="subscribe_askeza")],
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±.", callback_data="subscribe_draft")],
        [InlineKeyboardButton(f"üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±.", callback_data="subscribe_numerology")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    renew_text = f"""
üîÑ –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è:

üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ß–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∫–µ–∑–æ–π
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä –ª—é–±–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    """
    
    await query.edit_message_text(
        renew_text,
        reply_markup=reply_markup
    )
    
    print(f"‚úÖ [RENEW] –ú–µ–Ω—é –ø—Ä–æ–¥–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    logger.info(f"[RENEW] –ú–µ–Ω—é –ø—Ä–æ–¥–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

async def handle_about_subscription_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [ABOUT] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ–± –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[ABOUT] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ–± –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    about_text = f"""
‚ÑπÔ∏è –û –ø–æ–¥–ø–∏—Å–∫–µ:

üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ß–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∫–µ–∑–æ–π
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä –ª—é–±–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

üéÅ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ó–∞–∫—Ä—ã—Ç—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –ó–∞ {config.WARNING_DAYS} –¥–Ω—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
    """
    
    keyboard = [
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±.", callback_data="subscribe_askeza")],
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±.", callback_data="subscribe_draft")],
        [InlineKeyboardButton(f"üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±.", callback_data="subscribe_numerology")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        about_text,
        reply_markup=reply_markup
    )
    
    print(f"‚úÖ [ABOUT] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    logger.info(f"[ABOUT] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

async def handle_about_askeza_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –ê—Å–∫–µ–∑–µ"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [ABOUT_ASKEZA] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ–± –ê—Å–∫–µ–∑–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[ABOUT_ASKEZA] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ–± –ê—Å–∫–µ–∑–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
    try:
        print(f"üé• [ABOUT_ASKEZA] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[ABOUT_ASKEZA] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤–∏–¥–µ–æ
        video_path = os.path.join(SCRIPT_DIR, "aboute.mp4")
        print(f"üìÅ [ABOUT_ASKEZA] –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ: {video_path}")
        
        with open(video_path, "rb") as video_file:
            await context.bot.send_video(
                chat_id=user_id,
                video=video_file
                #caption="üìñ –û–± –ê—Å–∫–µ–∑–µ"
            )
        
        print(f"‚úÖ [ABOUT_ASKEZA] –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[ABOUT_ASKEZA] –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except FileNotFoundError:
        print(f"‚ùå [ABOUT_ASKEZA] –§–∞–π–ª aboute.mp4 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        logger.error(f"[ABOUT_ASKEZA] –§–∞–π–ª aboute.mp4 –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå [ABOUT_ASKEZA] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        logger.error(f"[ABOUT_ASKEZA] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
    about_askeza_text = """üìñ –û–± –ê—Å–∫–µ–∑–µ

–ê—Å–∫–µ–∑–∞ - –¥—É—Ö–æ–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ–¥–æ–±–Ω–∞—è –ø–æ—Å—Ç—É, —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –µ–µ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü!‚ú® –≤—ã –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –ª–∏–±–æ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç–µ—Å—å –æ—Ç —á–µ–≥–æ-—Ç–æ, –ª–∏–±–æ –≤–Ω–µ–¥—Ä—è–µ—Ç–µ –≤ —Å–≤–æ—é –∂–∏–∑–Ω—å —Ö–æ—Ä–æ—à—É—é –ø—Ä–∏–≤—ã—á–∫—É –∏ –≤—ã—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –∏–¥–µ—Ç –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∞—à–µ–≥–æüí´

–ñ–µ–ª–∞–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±—ã–º: –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ, –¥—É—Ö–æ–≤–Ω–æ–µ, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏ –¥–∞–∂–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ, —á–µ–º –∞—Å–∫–µ–∑–∞ –∫—Ä—É—Ç–∞, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥–∞–¥–∞—Ç—å –¥–∞–∂–µ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–µ —Å–≤–æ–µ–≥–æ –±–ª–∏–∑–∫–æ–≥–æ!üòª"""
    
    keyboard = [
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±.", callback_data="subscribe_askeza")],
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±.", callback_data="subscribe_draft")],
        [InlineKeyboardButton(f"üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±.", callback_data="subscribe_numerology")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await context.bot.send_message(
            chat_id=user_id,
            text=about_askeza_text,
            reply_markup=reply_markup
        )
        print(f"‚úÖ [ABOUT_ASKEZA] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ê—Å–∫–µ–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[ABOUT_ASKEZA] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ê—Å–∫–µ–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        print(f"‚ùå [ABOUT_ASKEZA] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        logger.error(f"[ABOUT_ASKEZA] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

async def handle_tariffs_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    print(f"üîç [TARIFFS] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[TARIFFS] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    tariffs_text = f"""
üíé –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:

üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üå∏ –ê—Å–∫–µ–∑–∞+–ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—à–µ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –∞—Å–∫–µ–∑—ã
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±–ª–µ–π
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä –ª—é–±–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
‚Ä¢ 30 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ:
    """
    
    keyboard = [
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞ - {config.ASKEZA_PRICE} —Ä—É–±.", callback_data="subscribe_askeza")],
        [InlineKeyboardButton(f"üå∏ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫ - {config.ASKEZA_DRAFT_PRICE} —Ä—É–±.", callback_data="subscribe_draft")],
        [InlineKeyboardButton(f"üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±.", callback_data="subscribe_numerology")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    try:
        await query.edit_message_text(
            tariffs_text,
            reply_markup=reply_markup
        )
        print(f"‚úÖ [TARIFFS] –¢–∞—Ä–∏—Ñ—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        logger.info(f"[TARIFFS] –¢–∞—Ä–∏—Ñ—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        print(f"‚ùå [TARIFFS] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        logger.error(f"[TARIFFS] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

async def handle_main_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    
    user = query.from_user
    user_id = user.id
    
    print(f"üîç [MAIN] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    logger.info(f"[MAIN] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    is_subscribed = db.is_subscription_active(user_id)
    
    if is_subscribed:
        subscription = db.get_user_subscription(user_id)
        expires_at = datetime.fromisoformat(subscription['expires_at'])
        days_left = (expires_at - datetime.now()).days
        
        keyboard = [
            [InlineKeyboardButton("üì∫ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=f"https://t.me/c/{config.PRIVATE_CHANNEL_ID[1:]}")],
            [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="renew_subscription")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        welcome_text = f"""
üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ {expires_at.strftime('%d.%m.%Y')}
–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}
        """
    else:
        keyboard = [
            [InlineKeyboardButton("üíé –¢–∞—Ä–∏—Ñ—ã", callback_data="tariffs")],
            [InlineKeyboardButton("üìñ –û–± –ê—Å–∫–µ–∑–µ", callback_data="about_askeza")],
            [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å", callback_data="my_status")],
            [InlineKeyboardButton("‚ÑπÔ∏è –û –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="about_subscription")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        welcome_text = """
üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –∑–∞–∫—Ä—ã—Ç—ã–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è–º.

–ù–∞–∂–º–∏—Ç–µ "üíé –¢–∞—Ä–∏—Ñ—ã" —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏.
        """
    
    await query.edit_message_text(
        welcome_text,
        reply_markup=reply_markup
    )
    
    print(f"‚úÖ [MAIN] –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    logger.info(f"[MAIN] –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error: {context.error}")
    print(f"‚ùå –û—à–∏–±–∫–∞: {context.error}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏...")
    print(f"üå∏ –ê—Å–∫–µ–∑–∞: {config.ASKEZA_PRICE} —Ä—É–±–ª–µ–π")
    print(f"üîÆ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è: {config.ASKEZA_NUMEROLOGY_PRICE} —Ä—É–±–ª–µ–π")
    print(f"üìÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {config.SUBSCRIPTION_DAYS} –¥–Ω–µ–π")
    print(f"üì∫ –ö–∞–Ω–∞–ª: {config.PRIVATE_CHANNEL_ID}")
    print("üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        application = Application.builder().token(config.BOT_TOKEN).build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CallbackQueryHandler(handle_tariffs_callback, pattern="tariffs"))
        application.add_handler(CallbackQueryHandler(handle_subscribe_askeza_callback, pattern="subscribe_askeza"))
        application.add_handler(CallbackQueryHandler(handle_subscribe_draft_callback, pattern="subscribe_draft"))
        application.add_handler(CallbackQueryHandler(handle_subscribe_numerology_callback, pattern="subscribe_numerology"))
        application.add_handler(CallbackQueryHandler(handle_check_payment_callback, pattern="check_payment"))
        application.add_handler(CallbackQueryHandler(handle_my_status_callback, pattern="my_status"))
        application.add_handler(CallbackQueryHandler(handle_renew_subscription_callback, pattern="renew_subscription"))
        application.add_handler(CallbackQueryHandler(handle_about_subscription_callback, pattern="about_subscription"))
        application.add_handler(CallbackQueryHandler(handle_about_askeza_callback, pattern="about_askeza"))
        application.add_handler(CallbackQueryHandler(handle_main_menu_callback, pattern="main_menu"))
        application.add_error_handler(error_handler)

        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã:")
        print("   ‚Ä¢ /start - –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç")
        print("   ‚Ä¢ tariffs - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤")
        print("   ‚Ä¢ subscribe_askeza - –ø–æ–¥–ø–∏—Å–∫–∞ –ê—Å–∫–µ–∑–∞")
        print("   ‚Ä¢ subscribe_draft - –ø–æ–¥–ø–∏—Å–∫–∞ –ê—Å–∫–µ–∑–∞+—á–µ—Ä–Ω–æ–≤–∏–∫")
        print("   ‚Ä¢ subscribe_numerology - –ø–æ–¥–ø–∏—Å–∫–∞ –ê—Å–∫–µ–∑–∞+–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è")
        print("   ‚Ä¢ about_askeza - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ê—Å–∫–µ–∑–µ")
        print("   ‚Ä¢ check_payment - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞")
        print("   ‚Ä¢ my_status - —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏")
        print("   ‚Ä¢ renew_subscription - –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏")
        print("   ‚Ä¢ about_subscription - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ")
        print("   ‚Ä¢ main_menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞")
        print("üìù –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        application.run_polling(
            drop_pending_updates=True,
            allowed_updates=Update.ALL_TYPES
        )
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        raise

if __name__ == '__main__':
    main()
