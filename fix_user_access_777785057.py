#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 777785057
"""

import sqlite3
import asyncio
from datetime import datetime

def check_user_in_database(user_id: int):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('askeza_bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
        user = cursor.fetchone()
        
        if user:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            print(f"   ID: {user[0]}")
            print(f"   Username: {user[1]}")
            print(f"   First Name: {user[2]}")
            print(f"   Last Name: {user[3]}")
            print(f"   Created: {user[4]}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("""
            SELECT * FROM user_access 
            WHERE user_id = ? AND is_active = 1
            ORDER BY created_at DESC
        """, (user_id,))
        access = cursor.fetchone()
        
        if access:
            print("\n‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø:")
            print(f"   –¢–∏–ø –¥–æ—Å—Ç—É–ø–∞: {access[2]}")
            print(f"   –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {access[3]}")
            print(f"   –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {access[4]}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {access[5]}")
        else:
            print("\n‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("""
            SELECT * FROM payments 
            WHERE user_id = ? 
            ORDER BY created_at DESC
        """, (user_id,))
        payments = cursor.fetchall()
        
        if payments:
            print(f"\nüí≥ –ù–∞–π–¥–µ–Ω–æ {len(payments)} –ø–ª–∞—Ç–µ–∂–µ–π:")
            for payment in payments:
                print(f"   - ID: {payment[0]}")
                print(f"     –¢–∏–ø: {payment[2]}")
                print(f"     –°—É–º–º–∞: {payment[3]}‚ÇΩ")
                print(f"     –°—Ç–∞—Ç—É—Å: {payment[4]}")
                print(f"     –î–∞—Ç–∞: {payment[5]}")
                if payment[6]:  # paid_at
                    print(f"     –û–ø–ª–∞—á–µ–Ω: {payment[6]}")
        else:
            print("\n‚ùå –ü–ª–∞—Ç–µ–∂–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def create_access_for_user(user_id: int, payment_type: str = "askeza"):
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüîß –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('askeza_bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–æ—Å—Ç—É–ø
        cursor.execute("""
            SELECT * FROM user_access 
            WHERE user_id = ? AND is_active = 1
        """, (user_id,))
        existing_access = cursor.fetchone()
        
        if existing_access:
            print("‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø")
            print("–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è...")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è
            new_end_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            cursor.execute("""
                UPDATE user_access 
                SET end_date = ?, updated_at = ?
                WHERE user_id = ? AND is_active = 1
            """, (new_end_date, new_end_date, user_id))
        else:
            print("–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ—Å—Ç—É–ø...")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ—Å—Ç—É–ø
            start_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            end_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            
            cursor.execute("""
                INSERT INTO user_access (user_id, payment_type, start_date, end_date, is_active, created_at, updated_at)
                VALUES (?, ?, ?, ?, 1, ?, ?)
            """, (user_id, payment_type, start_date, end_date, start_date, start_date))
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –î–æ—Å—Ç—É–ø —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞: {e}")
        return False

def print_manual_instructions():
    """–ü–µ—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\n" + "=" * 50)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:")
    print("   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª askeza_bot.db –≤ SQLite –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É 'users' - –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 777785057")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É 'user_access' - –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É 'payments' - –µ—Å—Ç—å –ª–∏ —É—Å–ø–µ—à–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏")
    
    print("\n2Ô∏è‚É£ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –Ω–æ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞:")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ 'user_access'")
    print("   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ is_active = 1")
    print("   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è")
    
    print("\n3Ô∏è‚É£ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ:")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ 'users'")
    print("   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ user_id = 777785057")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –≤ —Ç–∞–±–ª–∏—Ü–µ 'user_access'")
    
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:")
    print("   ‚Ä¢ PRIVATE_CHANNEL_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("   ‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
    print("   ‚Ä¢ –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    print("\n5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É:")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é send_channel_invite")
    print("   ‚Ä¢ –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤—Ä—É—á–Ω—É—é")
    print("   ‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –Ω–∞–∂–∞—Ç—å '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    user_id = 777785057
    
    print("üö® –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–û–°–¢–£–ü–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user_exists = check_user_in_database(user_id)
    
    if user_exists:
        print("\nüîß –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø...")
        success = create_access_for_user(user_id)
        
        if success:
            print("\n‚úÖ –î–æ—Å—Ç—É–ø –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
            print("–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω:")
            print("1. –ù–∞–∂–∞—Ç—å '–ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª' –≤ –±–æ—Ç–µ")
            print("2. –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
            print("3. –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ —Å—Å—ã–ª–∫–µ")
            print("4. –ù–∞–∂–∞—Ç—å '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø")
            print_manual_instructions()
    else:
        print("\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print_manual_instructions()

if __name__ == "__main__":
    main()
