#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ –¥–ª—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
"""

import logging
import asyncio
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from database import Database
from channel_manager import ChannelManager
from config import BOT_TOKEN, PRIVATE_CHANNEL_ID, PRIVATE_CHAT_ID

logger = logging.getLogger(__name__)

class CallbackHandler:
    def __init__(self):
        self.bot = Bot(token=BOT_TOKEN)
        self.db = Database()
        self.channel_manager = ChannelManager()
    
    async def handle_callback(self, callback_data: str, user_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ –æ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫"""
        try:
            logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback: {callback_data} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            if callback_data == "private_channel":
                await self.give_channel_access(user_id)
            elif callback_data == "private_chat":
                await self.give_chat_access(user_id)
            elif callback_data == "back_to_main":
                await self.show_main_menu(user_id)
            else:
                logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: {callback_data}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback {callback_data}: {e}")
    
    async def give_channel_access(self, user_id: int):
        """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø
            user_access = self.db.get_user_access(user_id)
            if not user_access:
                await self.bot.send_message(
                    chat_id=user_id,
                    text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞. –°–Ω–∞—á–∞–ª–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É."
                )
                return
            
            if PRIVATE_CHANNEL_ID:
                channel_text = f"""
üì∫ –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –ê—Å–∫–µ–∑—ã

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:
https://t.me/{PRIVATE_CHANNEL_ID.replace('@', '')}
                """
            else:
                channel_text = "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            
            await self.bot.send_message(chat_id=user_id, text=channel_text)
            logger.info(f"–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É: {e}")
            await self.bot.send_message(
                chat_id=user_id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É."
            )
    
    async def give_chat_access(self, user_id: int):
        """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø
            user_access = self.db.get_user_access(user_id)
            if not user_access:
                await self.bot.send_message(
                    chat_id=user_id,
                    text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞. –°–Ω–∞—á–∞–ª–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É."
                )
                return
            
            if PRIVATE_CHAT_ID:
                chat_text = f"""
üí¨ –ó–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç –ê—Å–∫–µ–∑—ã

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏:
https://t.me/{PRIVATE_CHAT_ID.replace('@', '')}
                """
            else:
                chat_text = "‚ùå –ß–∞—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            
            await self.bot.send_message(chat_id=user_id, text=chat_text)
            logger.info(f"–î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É: {e}")
            await self.bot.send_message(
                chat_id=user_id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É."
            )
    
    async def show_main_menu(self, user_id: int):
        """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        try:
            user_access = self.db.get_user_access(user_id)
            has_access = len(user_access) > 0
            
            if has_access:
                keyboard = [
                    [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å/–û—Ç–≤–µ—Ç", callback_data="faq")],
                    [InlineKeyboardButton("üì∫ –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", callback_data="private_channel")],
                    [InlineKeyboardButton("üí¨ –ó–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç", callback_data="private_chat")],
                    [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="payment")]
                ]
            else:
                keyboard = [
                    [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å/–û—Ç–≤–µ—Ç", callback_data="faq")],
                    [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="payment")]
                ]
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            main_text = """
üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ê—Å–∫–µ–∑—ã! üåü

–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:
            """
            
            await self.bot.send_message(
                chat_id=user_id,
                text=main_text,
                reply_markup=reply_markup
            )
            logger.info(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
            await self.bot.send_message(
                chat_id=user_id,
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é."
            )

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
callback_handler = CallbackHandler()
