#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 760111270
"""

import sqlite3
from datetime import datetime

def check_user_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 760111270")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('askeza_bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('SELECT * FROM users WHERE user_id = ?', (760111270,))
        user = cursor.fetchone()
        
        if user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
            print(f"   ‚Ä¢ ID: {user[0]}")
            print(f"   ‚Ä¢ Username: {user[1]}")
            print(f"   ‚Ä¢ First name: {user[2]}")
            print(f"   ‚Ä¢ Last name: {user[3]}")
            print(f"   ‚Ä¢ Created: {user[4]}")
            print(f"   ‚Ä¢ Active: {user[5]}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
        cursor.execute('''
            SELECT yookassa_payment_id, payment_type, amount, status, created_at 
            FROM payments 
            WHERE user_id = ?
            ORDER BY created_at DESC
        ''', (760111270,))
        payments = cursor.fetchall()
        
        print(f"\nüí≥ –ü–ª–∞—Ç–µ–∂–∏ ({len(payments)}):")
        for payment in payments:
            print(f"   ‚Ä¢ {payment[0]} - {payment[1]} - {payment[2]}‚ÇΩ - {payment[3]} - {payment[4]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
        cursor.execute('''
            SELECT access_type, created_at, expires_at, is_active 
            FROM user_access 
            WHERE user_id = ?
            ORDER BY created_at DESC
        ''', (760111270,))
        access_records = cursor.fetchall()
        
        print(f"\nüîê –î–æ—Å—Ç—É–ø ({len(access_records)}):")
        for access in access_records:
            print(f"   ‚Ä¢ {access[0]} - {access[1]} - {access[2]} - {access[3]}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    check_user_status()

if __name__ == "__main__":
    main()
